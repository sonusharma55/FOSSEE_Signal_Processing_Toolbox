<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from ar_psd.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="ar_psd" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>ar_psd</refname>
    <refpurpose>Calculate the power spectrum of the autoregressive model</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   [PSD,F_OUT]=ar_psd (A, V)
   [PSD,F_OUT]=ar_psd (A, V, FREQ)
   [PSD,F_OUT]=ar_psd (A, V, FREQ, FS)
   [PSD,F_OUT]=ar_psd (..., RANGE)
   [PSD,F_OUT]=ar_psd (..., METHOD)
   [PSD,F_OUT]=ar_psd (..., PLOTTYPE)
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>A:</term>
      <listitem><para>List of M=(order+1) autoregressive model coefficients. The first element of "ar_coeffs" is the zero-lag coefficient, which always has a value of 1.</para></listitem></varlistentry>
   <varlistentry><term>V:</term>
      <listitem><para>Square of the moving-average coefficient of the AR model.</para></listitem></varlistentry>
   <varlistentry><term>FREQ:</term>
      <listitem><para>Frequencies at which power spectral density is calculated, or a scalar indicating the number of uniformly distributed frequency values at which spectral density is calculated.  (default = 256)</para></listitem></varlistentry>
   <varlistentry><term>FS:</term>
      <listitem><para>Sampling frequency (Hertz) (default=1)</para></listitem></varlistentry>
   <varlistentry><term>Range:</term>
      <listitem><para> 'half', 'onesided' : frequency range of the spectrum is from zero up to but not including sample_f/2. Power from negative frequencies is added to the positive side of the spectrum.'whole', 'twosided' : frequency range of the spectrum is-sample_f/2 to sample_f/2, with negative frequencies stored in "wrap around" order after the positive frequencies; e.g. frequencies for a 10-point 'twosided' spectrum are 0 0.1 0.2 0.3 0.4 0.5 -0.4 -0.3 -0.2 -0.1 'shift', 'centerdc' : same as 'whole' but with the first half of the spectrum swapped with second half to put the zero-frequency value in the middle.  (See "help fftshift". If "freq" is vector, 'shift' is ignored.  If model coefficients "ar_coeffs" are real, the default range is 'half', otherwise default range is 'whole'.</para></listitem></varlistentry>
   <varlistentry><term>Method:</term>
      <listitem><para>'fft': use FFT to calculate power spectrum.  'poly': calculate power spectrum as a polynomial of 1/z N.B. this argument is ignored if the "freq" argument is a vector.  The default is 'poly' unless the "freq" argument is an integer power of 2.</para></listitem></varlistentry>
   <varlistentry><term>Plot type:</term>
      <listitem><para>'plot', 'semilogx', 'semilogy', 'loglog', 'squared' or 'db':specifies the type of plot.  The default is 'plot', which means linear-linear axes.  'squared' is the same as 'plot'.  'dB' plots "10*log10(psd)".  This argument is ignored and a spectrum is not plotted if the caller requires a returned value.</para></listitem></varlistentry>
   <varlistentry><term>PSD:</term>
      <listitem><para> estimate of power-spectral density</para></listitem></varlistentry>
   <varlistentry><term>F_OUT:</term>
      <listitem><para> frequency values</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
If the FREQ argument is a vector (of frequencies) the spectrum is calculated using the polynomial method and the METHOD argument is ignored.  For scalar FREQ, an integer power of 2, or METHOD = "FFT", causes the spectrum to be calculated by FFT. Otherwise, the spectrum is calculated as a polynomial.  It may be computationally more efficient to use the FFT method if length of the model is not much smaller than the number of frequency values.  The spectrum is scaled so that spectral energy (area under spectrum) is the same as the time-domain energy (mean square of the signal).
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
[a,b]= ar_psd([1,2,3],2)
   ]]></programlisting>
</refsection>
</refentry>
